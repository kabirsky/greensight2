{"version":3,"sources":["components/Search.js","components/Vacancy.js","modules/JobApi.js","components/Vacancies.js","components/ContactForm.js","components/Footer.js","App.js","serviceWorker.js","index.js","img/no_image_available.svg"],"names":["Search","props","select_value","setSelectValue","useState","position_value","setPositionValue","searchButton","setSearchButton","useEffect","className","onSubmit","e","preventDefault","required","value","onChange","event","target","onKeyPress","key","hidden","disabled","htmlFor","type","id","name","placeholder","onClick","Vacancy","company_logo","setCompanyLogo","vacancy","setVacancy","description","setDescription","description__text","setDescriptionText","buttonValue","setButtonValue","closed","setClosed","vacancyRef","useRef","no_image_available","window","scrollTo","current","offsetTop","ref","alt","src","onError","company","href","url","title","parse","JobApi","setVacanciesJSON","setVacancies","a","fetch","response","json","jobs","console","log","temp","i","length","push","location","fetchJobs","Vacancies","vacancies","end","setEnd","targetY","setTargetY","visibleVacancies","slice","filter","val","getJobs","onscroll","y","scrollY","style","display","ContactForm","Footer","isError","setName","email","setEmail","phone","setPhone","comment","setComment","errorName","setErrorName","errorEmail","setErrorEmail","errorPhone","setErrorPhone","handleKeyPress","handleSubmit","match","includes","alert","mask","App","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.7eb8cd1f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/Search.css\";\r\n\r\nfunction Search(props) {\r\n  let select_value = props.select_value;\r\n  let setSelectValue = props.setSelectValue;\r\n  let [position_value, setPositionValue] = useState(\"\");\r\n  let [searchButton, setSearchButton] = useState(\"search-btn-wrapper\");\r\n\r\n  useEffect(() => {\r\n    if (select_value === \"\" && position_value === \"\") {\r\n      setSearchButton(\"search-btn-wrapper search-btn-wrapper__disabled\");\r\n    } else {\r\n      setSearchButton(\"search-btn-wrapper\");\r\n    }\r\n  }, [select_value, position_value]);\r\n\r\n  let handleSelectChange = (event) => {\r\n    setSelectValue(event.target.value);\r\n  };\r\n\r\n  let handlePositionChange = (event) => {\r\n    setPositionValue(event.target.value);\r\n  };\r\n\r\n  let handleButtonClick = () => {\r\n    setSelectValue(\"\");\r\n    setPositionValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"search-form\">\r\n          <label className=\"search-form__label label\">Form</label>\r\n          <select\r\n            required\r\n            className=\"search-form__select\"\r\n            value={select_value}\r\n            onChange={handleSelectChange}\r\n            onKeyPress={(e) => {\r\n              e.key === \"Enter\" && e.preventDefault();\r\n            }}\r\n          >\r\n            <option\r\n              className=\"search-form__option placeholder\"\r\n              value=\"\"\r\n              hidden\r\n              disabled\r\n            >\r\n              Not selected\r\n            </option>\r\n            <option className=\"search-form__option\">Full Time</option>\r\n            <option className=\"search-form__option\">Half Time</option>\r\n            <option className=\"search-form__option\">Part Time</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"search-position\">\r\n          <label\r\n            className=\"search-position__label label\"\r\n            htmlFor=\"search-position__text\"\r\n          >\r\n            Position\r\n          </label>\r\n          <input\r\n            className=\"search-position__text text\"\r\n            type=\"text\"\r\n            id=\"search-position__text\"\r\n            name=\"position\"\r\n            placeholder=\"Unspecified\"\r\n            value={position_value}\r\n            onChange={handlePositionChange}\r\n            onKeyPress={(e) => {\r\n              e.key === \"Enter\" && e.preventDefault();\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={searchButton} onClick={handleButtonClick}>\r\n          <input\r\n            className=\"search-btn btn\"\r\n            type=\"button\"\r\n            id=\"search-btn\"\r\n            value=\"Clear sorting\"\r\n          />\r\n          <label className=\"search-btn__cross\" htmlFor=\"search-btn\"></label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport parse from \"html-react-parser\";\r\nimport \"../styles/Vacancy.css\";\r\n\r\nimport no_image_available from \"../img/no_image_available.svg\";\r\n\r\nfunction Vacancy(props) {\r\n  let [company_logo, setCompanyLogo] = useState(null);\r\n  let [vacancy, setVacancy] = useState(\"vacancy\");\r\n  let [description, setDescription] = useState(\"description\");\r\n  let [description__text, setDescriptionText] = useState(\"description__text\");\r\n  let [buttonValue, setButtonValue] = useState(\"more details\");\r\n  let [closed, setClosed] = useState(false);\r\n  let vacancyRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.company_logo === null) {\r\n      setCompanyLogo(no_image_available);\r\n    } else {\r\n      setCompanyLogo(props.company_logo);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (closed) {\r\n      window.scrollTo(0, vacancyRef.current.offsetTop);\r\n    }\r\n  }, [closed]);\r\n\r\n  let handleImageErrored = () => {\r\n    setCompanyLogo(no_image_available);\r\n  };\r\n\r\n  let handleButtonClick = () => {\r\n    if (vacancy === \"vacancy\") {\r\n      setVacancy(\"vacancy vacancy__opened\");\r\n      setDescription(\"description description__opened\");\r\n      setDescriptionText(\"description__text description__text__opened\");\r\n      setButtonValue(\"close\");\r\n      setClosed(false);\r\n    } else {\r\n      setVacancy(\"vacancy\");\r\n      setDescription(\"description\");\r\n      setDescriptionText(\"description__text\");\r\n      setButtonValue(\"more details\");\r\n      setClosed(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={vacancy} ref={vacancyRef}>\r\n      <div className=\"info\">\r\n        <div className=\"info-img-wrapper\">\r\n          <img\r\n            className=\"info-img\"\r\n            alt=\"logo\"\r\n            src={company_logo}\r\n            onError={handleImageErrored}\r\n          />\r\n        </div>\r\n        <div className=\"info-text-wrapper\">\r\n          <p className=\"info-text info-text__form\">\r\n            <span className=\"info-text__label\">Form: </span>\r\n            {props.type}\r\n          </p>\r\n          <p className=\"info-text info-text__company\">\r\n            <span className=\"info-text__label\">Company: </span>\r\n            {props.company}\r\n          </p>\r\n          <p className=\"info-text info-text__web\">\r\n            <span className=\"info-text__label\">Web: </span>\r\n            <a className=\"info-text__link\" href={props.url}>\r\n              {props.url}\r\n            </a>\r\n          </p>\r\n          <p className=\"info-text info-text__address\">\r\n            <span className=\"info-text__label\">Address: </span>\r\n            {props.type}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={description}>\r\n        <h3 className=\"description__header\">{props.title}</h3>\r\n        <div className={description__text}>{parse(props.description)}</div>\r\n        <div className=\"description__btn-wrapper\">\r\n          <input\r\n            className=\"description__btn btn\"\r\n            type=\"button\"\r\n            id=\"description__button\"\r\n            value={buttonValue}\r\n            onClick={handleButtonClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vacancy;\r\n","import React from \"react\";\r\nimport Vacancy from \"../components/Vacancy\";\r\n\r\nexport default class JobApi {\r\n  getJobs(setVacanciesJSON, setVacancies) {\r\n    const fetchJobs = async () => {\r\n      const response = await fetch(\r\n        \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?search=frontend\"\r\n        //\"https://jobs.github.com/positions.json?search=frontend\"\r\n      );\r\n      const jobs = await response.json();\r\n      console.log(jobs);\r\n      setVacanciesJSON([...jobs]);\r\n      let temp = [];\r\n      for (let i = 0; i < jobs.length; i++) {\r\n        temp.push(\r\n          <Vacancy\r\n            key={i}\r\n            id={i}\r\n            company={jobs[i].company}\r\n            company_logo={jobs[i].company_logo}\r\n            type={jobs[i].type}\r\n            url={jobs[i].url}\r\n            location={jobs[i].location}\r\n            title={jobs[i].title}\r\n            description={jobs[i].description}\r\n          />  \r\n        );\r\n      }\r\n      setVacancies(temp);\r\n    };\r\n    fetchJobs();\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport JobApi from \"../modules/JobApi\";\r\n\r\nimport getTestValues from \"../test/getTestValues\";\r\n\r\nimport \"../styles/Vacancies.css\";\r\n\r\nfunction Vacancies(props) {\r\n  let [vacanciesJSON, setVacanciesJSON] = useState([]);\r\n  let [vacancies, setVacancies] = useState([]);\r\n  let [end, setEnd] = useState(5);\r\n  let [targetY, setTargetY] = useState(0);\r\n  let select_value = props.select_value;\r\n  let visibleVacancies =\r\n    select_value === \"\"\r\n      ? vacancies.slice(0, end)\r\n      : vacancies\r\n          .filter((val) => {\r\n            return val.props.type === select_value;\r\n          })\r\n          .slice(0, end);\r\n\r\n  /*Проставить true если надо посмотреть на функционал без API запросов*/\r\n  let isTest = false;\r\n\r\n  useEffect(() => {\r\n    if (!isTest) {\r\n      new JobApi().getJobs(setVacanciesJSON, setVacancies);\r\n    } else {\r\n      setVacancies(getTestValues());\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  let handleButtonClick = () => {\r\n    let y = window.scrollY;\r\n    setTargetY(y);\r\n    setEnd(end + 5);\r\n\r\n    window.onscroll = () => window.scrollTo(0, y); //отключаем скролл во избежание прыжков\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.onscroll = null; //включаем скролл обратно после рендера\r\n    window.scrollTo(0, targetY); //Фикс для мобильных браузеров\r\n  }, [targetY]);\r\n\r\n  return (\r\n    <div className=\"vacancies\">\r\n      {visibleVacancies}\r\n      <div className=\"vacancies__more-btn-wrapper\">\r\n        <input\r\n          className=\"vacancies__more-btn btn\"\r\n          type=\"button\"\r\n          id=\"vacancies__more-btn\"\r\n          value=\"More\"\r\n          onClick={handleButtonClick}\r\n          style={\r\n            visibleVacancies.length >= vacancies.length ||\r\n            visibleVacancies.length === 0\r\n              ? { display: \"none\" }\r\n              : {}\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vacancies;\r\n","import React from \"react\";\r\n\r\nfunction ContactForm() {\r\n  return <div className=\"contact-form\"></div>;\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { useState } from \"react\";\r\nimport MaskedInput from \"react-text-mask\";\r\nimport \"../styles/Footer.css\";\r\n\r\nfunction Footer() {\r\n  const mask = [\r\n    \"+\",\r\n    \"7\",\r\n    \"(\",\r\n    /[0-9]/,\r\n    /[0-9]/,\r\n    /[0-9]/,\r\n    \")\",\r\n    \" \",\r\n    /[0-9]/,\r\n    /[0-9]/,\r\n    /[0-9]/,\r\n    \"-\",\r\n    /[0-9]/,\r\n    /[0-9]/,\r\n    \"-\",\r\n    /[0-9]/,\r\n    /[0-9]/,\r\n  ];\r\n\r\n  let isError = false;\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const [errorName, setErrorName] = useState(\"form-element form-name\");\r\n  const [errorEmail, setErrorEmail] = useState(\"form-element form-email\");\r\n  const [errorPhone, setErrorPhone] = useState(\"form-element form-phone\");\r\n\r\n  const handleChangeName = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const handleChangePhone = (event) => {\r\n    setPhone(event.target.value);\r\n  };\r\n  const handleChangeEmail = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const handleChangeComment = (event) => {\r\n    setComment(event.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    event.key === \"Enter\" && handleSubmit(event);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    isError = false;\r\n    //Проверка ФИО\r\n    if (name === \"\" || name.match(/^[a-z а-яё ,.'-]+$/i) === null) {\r\n      isError = true;\r\n      setErrorName(\"form-element form-name form-element__error\");\r\n    } else {\r\n      setErrorName(\"form-element form-name\");\r\n    }\r\n\r\n    //Проверка емейла\r\n    if (email === \"\" || email.match(/[^@]+@[^.]+\\..+/i) === null) {\r\n      isError = true;\r\n      setErrorEmail(\"form-element form-email form-element__error\");\r\n    } else {\r\n      setErrorEmail(\"form-element form-email\");\r\n    }\r\n\r\n    //Проверка телефона\r\n    if (phone === \"\" || phone.includes(\"_\")) {\r\n      isError = true;\r\n      setErrorPhone(\"form-element form-phone form-element__error\");\r\n    } else {\r\n      setErrorPhone(\"form-element form-phone\");\r\n    }\r\n\r\n    if (!isError) {\r\n      alert(\r\n        `Name: ${name}\\nEmail: ${email}\\nPhone: ${phone}\\nComment: ${comment}`\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <h2 className=\"footer-title\">Leave a request</h2>\r\n      <div className=\"contacts\">\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-wrapper\">\r\n            <div key=\"name\" className={errorName}>\r\n              <label\r\n                className=\"form-name__label label\"\r\n                htmlFor=\"form-name__text\"\r\n              >\r\n                Your name\r\n              </label>\r\n              <input\r\n                className=\"form-name__text text\"\r\n                type=\"text\"\r\n                id=\"form-name__text\"\r\n                name=\"name\"\r\n                placeholder=\"Please introduce yourself\"\r\n                value={name}\r\n                onChange={handleChangeName}\r\n                onKeyPress={handleKeyPress}\r\n              />\r\n            </div>\r\n\r\n            <div key=\"email\" className={errorEmail}>\r\n              <label\r\n                className=\"form-email__label label\"\r\n                htmlFor=\"form-email__text\"\r\n              >\r\n                Email\r\n              </label>\r\n              <input\r\n                className=\"form-email__text text\"\r\n                type=\"text\"\r\n                id=\"form-email__text\"\r\n                name=\"email\"\r\n                placeholder=\"ivanov@mail.ru\"\r\n                value={email}\r\n                onChange={handleChangeEmail}\r\n                onKeyPress={handleKeyPress}\r\n              />\r\n            </div>\r\n\r\n            <div key=\"phone\" className={errorPhone}>\r\n              <label\r\n                className=\"form-phone__label label\"\r\n                htmlFor=\"form-phone__text\"\r\n              >\r\n                Phone number\r\n              </label>\r\n              <MaskedInput\r\n                className=\"form-phone__text text\"\r\n                type=\"text\"\r\n                id=\"form-phone__text\"\r\n                name=\"phone\"\r\n                mask={mask}\r\n                placeholder=\"+7(999)123-45-78\"\r\n                value={phone}\r\n                onChange={handleChangePhone}\r\n                onKeyPress={handleKeyPress}\r\n              />\r\n            </div>\r\n\r\n            <div key=\"comment\" className=\"form-element form-comment\">\r\n              <label\r\n                className=\"form-comment__label label\"\r\n                htmlFor=\"form-comment__text\"\r\n              >\r\n                Comment\r\n              </label>\r\n              <input\r\n                className=\"form-comment__text text\"\r\n                type=\"text\"\r\n                id=\"form-comment__text\"\r\n                name=\"comment\"\r\n                placeholder=\"Message text\"\r\n                value={comment}\r\n                onChange={handleChangeComment}\r\n                onKeyPress={handleKeyPress}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-btn-wrapper\">\r\n              <input\r\n                className=\"form-btn btn\"\r\n                type=\"submit\"\r\n                id=\"form-btn\"\r\n                value=\"Send\"\r\n                onKeyPress={handleKeyPress}\r\n              />\r\n              <div className=\"consent-wrapper\">\r\n                <p className=\"consent\">\r\n                  By clicking \"Send\" you confirm your consent to the{\" \"}\r\n                  <span className=\"consent__link\">processing of personal data</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div className=\"contacts-box\">\r\n          <p className=\"contacts-box__advice\">\r\n            We will advise you and help you start a new project\r\n          </p>\r\n          <p className=\"contacts-box__phone\">\r\n            <a href=\"tel:+7-499-391-66-69\">+7 499 391-66-69</a>\r\n          </p>\r\n          <p className=\"contacts-box__email\">\r\n            <a href=\"mailto:mail@greensight.ru\">mail@greensight.ru</a>\r\n          </p>\r\n          <p className=\"contacts-box__address\">\r\n            {[\r\n              \"Moscow, Zelenograd, Central Ave.,\",\r\n              <br />,\r\n              \"dg. 305, 3rd floor\",\r\n            ]}\r\n          </p>\r\n          <p className=\"contacts-box__navigation\">\r\n            <input\r\n              className=\"link-nav btn\"\r\n              type=\"button\"\r\n              id=\"link-nav\"\r\n              value=\"How to get there?\"\r\n            />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Search from \"./components/Search\";\nimport Vacancies from \"./components/Vacancies\";\nimport ContactForm from \"./components/ContactForm\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  let [select_value, setSelectValue] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h2 className=\"header-title\">List of vacancies</h2>\n        <Search select_value={select_value} setSelectValue={setSelectValue} />\n        <Vacancies select_value={select_value} />\n        <ContactForm />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/no_image_available.58f7230b.svg\";"],"sourceRoot":""}